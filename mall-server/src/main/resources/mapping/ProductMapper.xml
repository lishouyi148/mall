<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.dao.ProductMapper">
    <resultMap id="BaseResultMap" type="com.mall.entity.Product">
        <id column="product_id" property="product_id" jdbcType="INTEGER" />
        <result column="merchant_id" property="merchant_id" jdbcType="INTEGER" />
        <result column="category_id" property="category_id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="subtitle" property="subtitle" jdbcType="VARCHAR" />
        <result column="main_image" property="main_image" jdbcType="VARCHAR" />
        <result column="sub_images" property="sub_images" jdbcType="VARCHAR" />
        <result column="detail" property="detail" jdbcType="LONGVARCHAR" />
        <result column="price" property="price" jdbcType="DECIMAL" />
        <result column="stock" property="stock" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="sales" property="sales" jdbcType="INTEGER" />
        <result column="created_by" property="created_by" jdbcType="VARCHAR" />
        <result column="creator_id" property="creator_id" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
    </resultMap>

    <!--    id必须和方法名一致   parameterType是参数类型-->

    <insert id="insertProduct" parameterType="com.mall.entity.Product">
        insert into product( merchant_id,category_id,name,subtitle,main_image, sub_images, detail,price,stock,
                             status,
                             sales,
                             created_by,
                             creator_id) values(#{merchant_id}, #{category_id}, #{name},#{subtitle}, #{main_image}, #{sub_images},#{detail},#{price}, #{stock},#{status}, #{sales}, #{created_by}, #{creator_id})
    </insert>
    <!-- 分页查询商品 -->
    <select id="findProductsByPage" resultType="com.mall.entity.Product" resultMap="BaseResultMap">
        SELECT * FROM product LIMIT #{start}, #{pageSize}
    </select>
    <!-- 获取商品总条数 -->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*) FROM product
    </select>
    <!-- 根据商品名称和状态分页查询商品 -->
    <select id="findProductsByPageAndCondition" resultType="com.mall.entity.Product" resultMap="BaseResultMap">
        SELECT * FROM product
        WHERE 1 = 1
        <if test="name != null and name != ''">
            AND name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="merchantId != null">
            AND merchant_id = #{merchantId}
        </if>
        LIMIT #{start}, #{pageSize}
    </select>
    <!-- 根据商品名称和状态获取总条数 -->
    <select id="getTotalCountByCondition" resultType="int">
        SELECT COUNT(*) FROM product
        WHERE 1 = 1
        <if test="name != null and name != ''">
            AND name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="merchantId != null">
            AND merchant_id = #{merchantId}
        </if>
    </select>
    <!-- 删除商品 -->
    <delete id="deleteProductById" parameterType="java.lang.Integer">
        DELETE FROM product WHERE product_id = #{productId}
    </delete>
    <!-- 修改商品 -->
    <update id="updateProduct" parameterType="com.mall.entity.Product">
        UPDATE product
        SET merchant_id = #{merchant_id},
            category_id = #{category_id},
            name = #{name},
            subtitle = #{subtitle},
            main_image = #{main_image},
            sub_images = #{sub_images},
            detail = #{detail},
            price = #{price},
            stock = #{stock},
            status = #{status},
            sales = #{sales},
            created_by = #{created_by},
            creator_id = #{creator_id},
            update_time = CURRENT_TIMESTAMP
        WHERE product_id = #{product_id}
    </update>

    <!-- 根据商品ID查询商品信息 -->
    <select id="selectById" parameterType="java.lang.Integer" resultType="com.mall.entity.Product" resultMap="BaseResultMap">
        SELECT * FROM product WHERE product_id = #{productId}
    </select>
<!--    分类查询-->
    <select id="findProductNamesByCategoryId" resultType="java.lang.String">
        SELECT name FROM product WHERE category_id = #{categoryId}
    </select>

    <select id="findProductsByCategoryIds" resultType="com.mall.entity.Product">
        SELECT * FROM product
        WHERE category_id IN
        <foreach collection="categoryIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND status = 1 <!-- 只查询上架商品 -->
    </select>
    <select id="getTotalSalesByCategoryIds" resultType="java.util.Map">
        SELECT
        category_id,
        SUM(sales) AS total_sales
        FROM
        product
        WHERE
        category_id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY
        category_id
    </select>
    <select id="getSalesByPriceRange" resultType="java.util.Map">
        SELECT
            CASE
                WHEN price BETWEEN 0 AND 100 THEN '0-100'
                WHEN price BETWEEN 101 AND 500 THEN '100-500'
                WHEN price BETWEEN 501 AND 1000 THEN '500-1000'
                ELSE '1000+'
                END AS price_range,
            SUM(sales) AS total_sales
        FROM
            product
        GROUP BY
            CASE
                WHEN price BETWEEN 0 AND 100 THEN '0-100'
                WHEN price BETWEEN 101 AND 500 THEN '100-500'
                WHEN price BETWEEN 501 AND 1000 THEN '500-1000'
                ELSE '1000+'
                END
    </select>
</mapper>