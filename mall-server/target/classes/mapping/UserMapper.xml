<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.dao.UserMapper">
    <!-- 基础字段映射 - 修改id类型为INTEGER -->
    <resultMap id="BaseResultMap" type="com.mall.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="TINYINT"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 按用户名查询 -->
    <select id="findByUsername" resultMap="BaseResultMap">
        SELECT * FROM user WHERE username = #{username}
    </select>

    <!-- 按主键id查询 - 修改parameterType为Integer -->
    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <!-- 新增用户 -->
    <insert id="insert" parameterType="com.mall.entity.User">
        INSERT INTO user (
            username,
            password,
            nickname,
            phone,
            email,
            avatar,
            gender,
            birthday,
            status
        ) VALUES (
                     #{username},
                     #{password},
                     #{nickname},
                     #{phone},
                     #{email},
                     #{avatar},
                     #{gender},
                     #{birthday},
                     #{status}
                 )
    </insert>

    <!-- 更新用户 -->
    <update id="update" parameterType="com.mall.entity.User">
        UPDATE user SET
                        username = #{username},
                        password = #{password},
                        nickname = #{nickname},
                        phone = #{phone},
                        email = #{email},
                        avatar = #{avatar},
                        gender = #{gender},
                        birthday = #{birthday},
                        status = #{status},
                        update_time = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 删除用户 - 修改parameterType为Integer -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <!-- 查询所有用户 -->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT * FROM user ORDER BY create_time DESC
    </select>

    <!-- 新增：统计各年龄段用户数量 -->
    <select id="countByAgeGroup" resultType="com.mall.entity.AgeGroupCountDTO">
        SELECT
        CASE
        WHEN TIMESTAMPDIFF(YEAR, birthday, CURDATE()) BETWEEN 1 AND 25 THEN '1-25'
        WHEN TIMESTAMPDIFF(YEAR, birthday, CURDATE()) BETWEEN 26 AND 50 THEN '26-50'
        WHEN TIMESTAMPDIFF(YEAR, birthday, CURDATE()) BETWEEN 51 AND 75 THEN '51-75'
        WHEN TIMESTAMPDIFF(YEAR, birthday, CURDATE()) BETWEEN 76 AND 100 THEN '76-100'
        ELSE '其他'
        END AS ageGroup,
        COUNT(*) AS count
        FROM user
        WHERE birthday IS NOT NULL  -- 排除未填写生日的用户
        GROUP BY ageGroup
        ORDER BY
        CASE ageGroup
        WHEN '1-25' THEN 1
        WHEN '26-50' THEN 2
        WHEN '51-75' THEN 3
        WHEN '76-100' THEN 4
        ELSE 5
        END;  -- 按年龄段顺序排序
    </select>
</mapper>